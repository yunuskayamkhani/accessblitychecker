Dependencies: Install the required libraries:
pip install selenium axe-selenium-python
pip install selenium axe-selenium-python


import csv
from selenium import webdriver
from axe_selenium_python import Axe
import json

def run_accessibility_audit(url):
    """a
    Runs accessibility audit using axe-core on the provided URL.
    """
    # Set up Selenium WebDriver
    options = webdriver.ChromeOptions()
    options.add_argument('--headless')  # Run browser in headless mode
    driver = webdriver.Chrome(options=options)
    
    try:
        driver.get(url)  # Open the URL
        axe = Axe(driver)  # Initialize Axe
        axe.inject()  # Inject axe-core into the browser session
        
        # Run accessibility tests
        results = axe.run()
        driver.quit()  # Close the browser
        
        # Parse and filter results for violations
        violations = results['violations']
        issue_data = []
        for violation in violations:
            for node in violation['nodes']:
                issue_data.append({
                    "URL": url,
                    "Issue": violation['description'],
                    "Impact": violation['impact'],
                    "Help URL": violation['helpUrl'],
                    "Element": node['html']
                })
        
        return issue_data
    
    except Exception as e:
        print(f"Error occurred while testing {url}: {str(e)}")
        return [{"URL": url, "Issue": "Error occurred", "Impact": "N/A", "Help URL": "N/A", "Element": str(e)}]
    
    finally:
        driver.quit()


def save_results_to_csv(results, output_file):
    """
    Saves accessibility issues to a CSV file.
    """
    csv_columns = ["URL", "Issue", "Impact", "Help URL", "Element"]
    
    try:
        with open(output_file, mode='w', newline='', encoding='utf-8') as file:
            writer = csv.DictWriter(file, fieldnames=csv_columns)
            writer.writeheader()
            writer.writerows(results)
        print(f"Accessibility results successfully saved to '{output_file}'.")
    except Exception as e:
        print(f"Error saving results to CSV: {str(e)}")


if __name__ == "__main__":
    # List of URLs to test
    urls_to_test = [
        "https://example.com",  # Replace with your URLs
        "https://example.com/page1",
        "https://example.com/page2"
    ]
    
    output_csv_file = "accessibility_results.csv"
    all_issues = []
    
    for url in urls_to_test:
        print(f"Testing URL: {url}\n{'-'*50}")
        issues = run_accessibility_audit(url)
        all_issues.extend(issues)
    
    # Save results to CSV
    save_results_to_csv(all_issues, output_csv_file)
    print("\nAccessibility audit complete. Results saved to 'accessibility_results.csv'.")
